{"version":3,"sources":["webpack:///./src/components/AsciiComputer.tsx","webpack:///./src/components/CursorRow.tsx","webpack:///./src/components/CursorRowGroup.tsx","webpack:///./src/components/index/Desktop.tsx","webpack:///./src/components/AutoplayVideos.tsx","webpack:///./src/components/RecordPlayer.tsx","webpack:///./src/components/index/Mobile.tsx","webpack:///./src/components/ResponsiveBreakpoint.tsx","webpack:///./src/pages/index.tsx"],"names":["AsciiComputer","children","ComputerPart","Computer","top","left","ComputerScreen","right","bottom","styled","div","pre","CursorRow","text","startTyping","className","delay","onComplete","useState","typedText","setTypedText","callback","useRef","useEffect","current","currentIndex","length","t","intervalId","setInterval","call","clearInterval","TextContainer","Cursor","span","Blinking","keyframes","CursorRowGroup","contentItems","startTypingIndex","setStartTypingIndex","onFinishTypingRow","useCallback","map","section","index","key","DesktopIndex","DesktopContent","HeaderContainer","Header","Index","headerName","ContentContainer","BioContainer","intro","ComputerContainer","ComputerContent","currentVideoSrcIndex","setCurrentVideoSrcIndex","ref","video","addEventListener","nextIndex","VideoURLs","autoPlay","muted","src","DashedContainer","PlayerContainer","startingPosition","endingPosition","rotateArm","PlayerArm","isArmRotating","css","Player","MobileIndex","isPlayingMusic","setIsPlayingMusic","currentSongIndex","setCurrentSongIndex","setTimeout","currentSong","AudioUrls","MobileContainer","mobileHeaderName","RecordPlayerContainer","StyledRecordPlayer","onClick","HiddenAudio","PlayerComponents","arm","playerWithoutArm","audio","ResponsiveBreakpoint","desktopView","mobileView","breakpoint","currentView","setView","useLayoutEffect","window","outerWidth","Footer","footer","MobileBreakpoint","TerminalScreenFrame","IndexPage","parseInt","target","href","EMAILME","RESUME","GALAKSIJA_ARTICLE","to"],"mappings":"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","file":"component---src-pages-index-tsx-d3a66eea1e1ec8d2706b.js","sourcesContent":["import React, { FC } from \"react\"\nimport styled from \"styled-components\"\nimport { Computer } from \"../constants/siteConstants\"\n\nexport const AsciiComputer: FC = ({ children }) => {\n  return (\n    <div>\n      <div>\n        <ComputerPart>{Computer.top}</ComputerPart>\n      </div>\n      <div>\n        <ComputerPart>{Computer.left}</ComputerPart>\n        <ComputerScreen>{children}</ComputerScreen>\n        <ComputerPart>{Computer.right}</ComputerPart>\n      </div>\n      <div>\n        <ComputerPart>{Computer.bottom}</ComputerPart>\n      </div>\n    </div>\n  )\n}\n\nconst ComputerScreen = styled.div`\n  display: inline-block;\n  width: 13.75vw;\n  height: 7vw;\n`\n\nconst ComputerPart = styled.pre`\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n`\n","import React, { FC, HTMLAttributes, useState, useEffect, useRef } from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  text: string\n  startTyping: boolean\n  delay?: number\n  onComplete?: () => void\n}\n\nexport const CursorRow: FC<Props> = ({\n  text,\n  startTyping,\n  className = \"\",\n  delay = 50,\n  onComplete = () => undefined,\n}) => {\n  const [typedText, setTypedText] = useState(\"\")\n  const callback = useRef<() => void>()\n\n  useEffect(() => {\n    callback.current = (): void => {\n      if (text === typedText) {\n        onComplete()\n        return\n      } else {\n        const currentIndex = typedText.length\n        setTypedText(t => t + text[currentIndex])\n      }\n    }\n  }, [text, typedText])\n\n  useEffect(() => {\n    if (startTyping) {\n      const tick = () => {\n        callback.current?.()\n      }\n\n      const intervalId = setInterval(tick, delay)\n      return () => clearInterval(intervalId)\n    }\n  }, [startTyping])\n\n  return (\n    <div className={className}>\n      <TextContainer>{typedText}</TextContainer>\n      {startTyping && <Cursor />}\n    </div>\n  )\n}\n\nconst TextContainer = styled.span`\n  &::selection {\n    background-color: white;\n    color: black;\n  }\n`\n\nconst Blinking = keyframes`\n  from {\n    background-color: white;\n  }\n\n  to {\n    background-color: black;\n  }\n`\n\nconst Cursor = styled.div`\n  display: inline-block;\n  background-color: white;\n  height: 23px;\n  width: 10px;\n  animation: ${Blinking} 1s linear infinite;\n  vertical-align: text-top;\n`\n","import React, { FC, useCallback, useState } from \"react\";\r\nimport { CursorRow } from \"./CursorRow\";\r\n\r\ninterface IOwnProps {\r\n    contentItems: string[]\r\n}\r\n\r\nexport const CursorRowGroup: FC<IOwnProps> = ({ contentItems }) => {\r\n  const [startTypingIndex, setStartTypingIndex] = useState(0)\r\n\r\n  const onFinishTypingRow = useCallback(() => {\r\n    setStartTypingIndex(startTypingIndex + 1)\r\n  }, [startTypingIndex, setStartTypingIndex])\r\n\r\n    return (\r\n        <>\r\n            {contentItems.map((section, index) => (\r\n            <CursorRow\r\n              text={section}\r\n              key={index}\r\n              startTyping={startTypingIndex === index}\r\n              onComplete={onFinishTypingRow}\r\n            />\r\n          ))\r\n            }\r\n        </>\r\n    );\r\n};\r\n","import React, { FC, HTMLAttributes } from \"react\"\nimport styled from \"styled-components\"\nimport { Index } from \"../../constants/siteConstants\"\nimport { AsciiComputer } from \"../AsciiComputer\"\nimport { AutoplayVideos } from \"../AutoplayVideos\"\nimport { CursorRowGroup } from \"../CursorRowGroup\"\n\nexport const DesktopIndex: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n}) => {\n  return (\n    <DesktopContent className={className ?? \"\"}>\n      <HeaderContainer>\n        <Header>{Index.headerName}</Header>\n      </HeaderContainer>\n      <ContentContainer>\n        <BioContainer>\n          <CursorRowGroup contentItems={ Index.intro } />\n        </BioContainer>\n        <ComputerContainer>\n          <AsciiComputer>\n            <ComputerContent />\n          </AsciiComputer>\n        </ComputerContainer>\n      </ContentContainer>\n    </DesktopContent>\n  )\n}\n\nconst DesktopContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 50px;\n`;\n\nconst HeaderContainer = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n`\n\nconst ComputerContent = styled(AutoplayVideos)`\n  width: 100%;\n  height: 100%;\n`\n\nconst Header = styled.pre`\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n`\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  flex-grow: 0;\n`\n\nconst DashedContainer = styled.div`\n  border: 5px dashed white;\n  padding: 15px;\n  flex-grow: 1;\n  width: 45%;\n`\n\nconst BioContainer = styled(DashedContainer)`\n  margin-right: 25px;\n  display: grid;\n  grid-row-gap: 15px;\n`\n\nconst ComputerContainer = styled(DashedContainer)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import React, { FC, HTMLAttributes, useState } from \"react\"\nimport { VideoURLs } from \"../constants/siteConstants\"\n\ntype Props = HTMLAttributes<HTMLVideoElement>\n\nexport const AutoplayVideos: FC<Props> = ({ className }) => {\n  const [currentVideoSrcIndex, setCurrentVideoSrcIndex] = useState(0)\n\n  const rotateVideo = (video: HTMLVideoElement | null) => {\n    if (video) {\n      video.addEventListener(\"ended\", () => {\n        const nextIndex = (currentVideoSrcIndex + 1) % VideoURLs.length\n        setCurrentVideoSrcIndex(nextIndex)\n      })\n    }\n  }\n\n  return (\n    <video\n      ref={rotateVideo}\n      autoPlay={true}\n      muted={true}\n      className={className}\n      src={VideoURLs[currentVideoSrcIndex]}\n    />\n  )\n}\n","import React, { FC, HTMLAttributes } from \"react\"\nimport { RecordPlayer as PlayerComponents } from \"../constants/siteConstants\"\nimport styled, { keyframes, css } from \"styled-components\"\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  isArmRotating: boolean\n  onClick?: () => void\n}\n\nexport const RecordPlayer: FC<Props> = ({ className = \"\", isArmRotating, onClick }) => {\n  return (\n    <PlayerContainer className={className} onClick={ onClick }>\n      <PlayerArm isArmRotating={isArmRotating}>\n        {PlayerComponents.arm}\n      </PlayerArm>\n      <Player>{PlayerComponents.playerWithoutArm}</Player>\n    </PlayerContainer>\n  )\n}\n\nconst PlayerContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`\n\nconst startingPosition = `\n    transform: rotate(0deg);\n    top: 9px;\n    right: 12px;\n`\n\nconst endingPosition = `\n    transform: rotate(90deg);\n    top: 2px;\n    right: -25px;\n`\n\nconst rotateArm = keyframes`\n    from {\n        ${startingPosition}\n    }\n\n    to {\n        ${endingPosition}\n    }\n`\n\nconst PlayerArm = styled.pre<{ isArmRotating: boolean }>`\n  position: absolute;\n  margin: 0;\n  transform-origin: top left;\n\n  ${({ isArmRotating }) => {\n    if (isArmRotating) {\n      return css`\n        animation: ${rotateArm} 2s linear;\n        ${endingPosition}\n      `\n    } else {\n      return `\n                ${startingPosition}\n            `\n    }\n  }}\n`\n\nconst Player = styled.pre`\n  margin: 0;\n`\n","import React, {\n  FC,\n  HTMLAttributes,\n  useState,\n  useEffect,\n  RefObject,\n} from \"react\"\nimport styled from \"styled-components\"\nimport { Index, AudioUrls } from \"../../constants/siteConstants\"\nimport { CursorRowGroup } from \"../CursorRowGroup\"\nimport { RecordPlayer } from \"../RecordPlayer\"\n\nexport const MobileIndex: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n}) => {\n  const [isPlayingMusic, setIsPlayingMusic] = useState(false)\n  const [currentSongIndex, setCurrentSongIndex] = useState(0)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsPlayingMusic(true)\n    }, 3000)\n  }, [])\n\n  const keepPlaying = (ref: HTMLAudioElement | null) => {\n    if (ref) {\n      ref.addEventListener(\"ended\", () => {\n        const nextIndex = (currentSongIndex + 1) % AudioUrls.length\n        setCurrentSongIndex(nextIndex)\n      })\n    }\n  }\n\n  const currentSong = AudioUrls[currentSongIndex]\n\n  const onRecordPlayerClick = () => {\n    setIsPlayingMusic(!isPlayingMusic);\n  };\n\n  return (\n    <MobileContainer className={ className ?? \"\" }>\n      <HeaderContainer>\n        <Header>{Index.mobileHeaderName}</Header>\n        <RecordPlayerContainer>\n          <StyledRecordPlayer isArmRotating={isPlayingMusic} onClick={ onRecordPlayerClick } />\n          {isPlayingMusic && (\n            <HiddenAudio src={currentSong} autoPlay={true} ref={keepPlaying} />\n          )}\n        </RecordPlayerContainer>\n      </HeaderContainer>\n      <BioContainer>\n        <CursorRowGroup contentItems={ Index.intro } />\n      </BioContainer>\n    </MobileContainer>\n  )\n}\n\nconst MobileContainer = styled.div`\n  display: grid;\n  grid-row-gap: 40px;\n  margin: 0 15px;\n`\n\nconst BioContainer = styled.div`\n  border: 5px dashed white;\n  padding: 15px;\n  display: grid;\n  grid-row-gap: 10px;\n  font-size: 0.9rem;\n  min-height: 231px;\n`;\n\nconst HeaderContainer = styled.div`\n  text-align: center;\n`\n\nconst Header = styled.pre`\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n  max-width: 100%;\n`\n\nconst StyledRecordPlayer = styled(RecordPlayer)`\n  margin-top: 20px;\n`\n\nconst RecordPlayerContainer = styled.div``\n\nconst HiddenAudio = styled.audio``\n","import { FC, ReactElement, useLayoutEffect, useState } from \"react\"\n\ninterface Props {\n  desktopView: ReactElement\n  mobileView: ReactElement\n  breakpoint: number\n}\n\nexport const ResponsiveBreakpoint: FC<Props> = ({\n  desktopView,\n  mobileView,\n  breakpoint,\n}) => {\n  const [currentView, setView] = useState<\"desktop\" | \"mobile\">(\"desktop\")\n  useLayoutEffect(() => {\n    setView(window.outerWidth >= breakpoint ? \"desktop\" : \"mobile\")\n  }, [window.outerWidth])\n\n  switch (currentView) {\n    case \"mobile\":\n      return mobileView\n    case \"desktop\":\n      return desktopView\n  }\n}\n","import React, { FC, useLayoutEffect } from \"react\"\n\nimport styled from \"styled-components\"\nimport { PageWrapper } from \"../components/page-wrapper\"\nimport { DesktopIndex } from \"../components/index/Desktop\"\nimport { MobileIndex } from \"../components/index/Mobile\"\nimport {\n  EMAILME,\n  GALAKSIJA_ARTICLE,\n  MobileBreakpoint,\n  RESUME,\n} from \"../constants/siteConstants\"\nimport { Link } from \"gatsby\"\nimport { ResponsiveBreakpoint } from \"../components/ResponsiveBreakpoint\"\n\nconst IndexPage: FC = () => {\n  return (\n    <>\n      <PageWrapper>\n        <TerminalScreenFrame>\n          <ResponsiveBreakpoint\n            desktopView={<DesktopIndex />}\n            mobileView={<MobileIndex />}\n            breakpoint={parseInt(MobileBreakpoint)}\n          />\n        </TerminalScreenFrame>\n      </PageWrapper>\n      <Footer>\n        <div>\n          <a target=\"_blank\" href={ EMAILME }>Write me an e-mail</a>\n        </div>\n        <div>\n          <a target='_blank' href={RESUME}>Read an awesome resume</a>\n        </div>\n        <div>\n          <a target='_blank' href={GALAKSIJA_ARTICLE}>Learn about programs on the radio</a>\n        </div>\n        <Link to=\"/credits\">Give credit where credit is due</Link>\n      </Footer>\n    </>\n  )\n}\n\nconst Footer = styled.footer`\n  display: grid;\n  justify-content: center;\n  margin: 10px 0;\n\n  @media (max-width: ${MobileBreakpoint}) {\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\nconst TerminalScreenFrame = styled.div`\n`\n\nexport default IndexPage\n"],"sourceRoot":""}