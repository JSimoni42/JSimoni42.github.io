{"version":3,"sources":["webpack:///./src/components/CursorRow.tsx","webpack:///./src/components/AsciiComputer.tsx","webpack:///./src/components/index/Desktop.tsx","webpack:///./src/components/AutoplayVideos.tsx","webpack:///./src/components/RecordPlayer.tsx","webpack:///./src/components/index/Mobile.tsx","webpack:///./src/components/ResponsiveBreakpoint.tsx","webpack:///./src/pages/index.tsx"],"names":["CursorRow","text","startTyping","className","delay","onComplete","useState","typedText","setTypedText","callback","useRef","useEffect","current","currentIndex","length","t","intervalId","setInterval","call","clearInterval","TextContainer","Cursor","styled","span","Blinking","keyframes","div","AsciiComputer","children","ComputerPart","Computer","top","left","ComputerScreen","right","bottom","pre","DesktopIndex","startTypingIndex","setStartTypingIndex","onFinishTypingRow","useCallback","HeaderContainer","Header","Index","headerName","ContentContainer","BioContainer","intro","map","introSection","introIndex","key","ComputerContainer","ComputerContent","currentVideoSrcIndex","setCurrentVideoSrcIndex","ref","video","addEventListener","nextIndex","VideoURLs","autoPlay","muted","src","DashedContainer","PlayerContainer","startingPosition","endingPosition","rotateArm","PlayerArm","isArmRotating","css","Player","StyledRecordPlayer","PlayerComponents","arm","playerWithoutArm","RecordPlayerContainer","HiddenAudio","audio","ResponsiveBreakpoint","desktopView","mobileView","breakpoint","currentView","setView","useLayoutEffect","window","innerWidth","Footer","footer","MobileBreakpoint","TerminalScreenFrame","ResponsiveMobileIndex","isPlayingMusic","setIsPlayingMusic","currentSongIndex","setCurrentSongIndex","setTimeout","currentSong","AudioUrls","mobileHeaderName","IndexPage","parseInt","target","href","RESUME","GALAKSIJA_ARTICLE","to"],"mappings":"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","file":"component---src-pages-index-tsx-a1652e37f303042266bf.js","sourcesContent":["import React, { FC, HTMLAttributes, useState, useEffect, useRef } from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  text: string\n  startTyping: boolean\n  delay?: number\n  onComplete?: () => void\n}\n\nexport const CursorRow: FC<Props> = ({\n  text,\n  startTyping,\n  className = \"\",\n  delay = 50,\n  onComplete = () => undefined,\n}) => {\n  const [typedText, setTypedText] = useState(\"\")\n  const callback = useRef<() => void>()\n\n  useEffect(() => {\n    callback.current = (): void => {\n      if (text === typedText) {\n        onComplete()\n        return\n      } else {\n        const currentIndex = typedText.length\n        setTypedText(t => t + text[currentIndex])\n      }\n    }\n  }, [text, typedText])\n\n  useEffect(() => {\n    if (startTyping) {\n      const tick = () => {\n        callback.current?.()\n      }\n\n      const intervalId = setInterval(tick, delay)\n      return () => clearInterval(intervalId)\n    }\n  }, [startTyping])\n\n  return (\n    <div className={className}>\n      <TextContainer>{typedText}</TextContainer>\n      {startTyping && <Cursor />}\n    </div>\n  )\n}\n\nconst TextContainer = styled.span`\n  &::selection {\n    background-color: white;\n    color: black;\n  }\n`\n\nconst Blinking = keyframes`\n  from {\n    background-color: white;\n  }\n\n  to {\n    background-color: black;\n  }\n`\n\nconst Cursor = styled.div`\n  display: inline-block;\n  background-color: white;\n  height: 23px;\n  width: 10px;\n  animation: ${Blinking} 1s linear infinite;\n  vertical-align: text-top;\n`\n","import React, { FC } from \"react\"\nimport styled from \"styled-components\"\nimport { Computer } from \"../constants/siteConstants\"\n\nexport const AsciiComputer: FC = ({ children }) => {\n  return (\n    <div>\n      <div>\n        <ComputerPart>{Computer.top}</ComputerPart>\n      </div>\n      <div>\n        <ComputerPart>{Computer.left}</ComputerPart>\n        <ComputerScreen>{children}</ComputerScreen>\n        <ComputerPart>{Computer.right}</ComputerPart>\n      </div>\n      <div>\n        <ComputerPart>{Computer.bottom}</ComputerPart>\n      </div>\n    </div>\n  )\n}\n\nconst ComputerScreen = styled.div`\n  display: inline-block;\n  width: 20.6vw;\n  height: 11vw;\n`\n\nconst ComputerPart = styled.pre`\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n`\n","import React, { FC, HTMLAttributes, useCallback, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { Index } from \"../../constants/siteConstants\"\nimport { CursorRow } from \"../CursorRow\"\nimport { AsciiComputer } from \"../AsciiComputer\"\nimport { AutoplayVideos } from \"../AutoplayVideos\"\n\nexport const DesktopIndex: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n}) => {\n  const [startTypingIndex, setStartTypingIndex] = useState(0)\n\n  const onFinishTypingRow = useCallback(() => {\n    setStartTypingIndex(startTypingIndex + 1)\n  }, [startTypingIndex, setStartTypingIndex])\n\n  return (\n    <div className={className ?? \"\"}>\n      <HeaderContainer>\n        <Header>{Index.headerName}</Header>\n      </HeaderContainer>\n      <ContentContainer>\n        <BioContainer>\n          {Index.intro.map((introSection, introIndex) => (\n            <CursorRow\n              text={introSection}\n              key={introIndex}\n              startTyping={startTypingIndex === introIndex}\n              onComplete={onFinishTypingRow}\n            />\n          ))}\n        </BioContainer>\n        <ComputerContainer>\n          <AsciiComputer>\n            <ComputerContent />\n          </AsciiComputer>\n        </ComputerContainer>\n      </ContentContainer>\n    </div>\n  )\n}\n\nconst HeaderContainer = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n`\n\nconst ComputerContent = styled(AutoplayVideos)`\n  width: 100%;\n  height: 100%;\n`\n\nconst Header = styled.pre`\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n`\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  flex-grow: 0;\n`\n\nconst DashedContainer = styled.div`\n  border: 5px dashed white;\n  padding: 15px;\n  flex-grow: 1;\n  width: 45%;\n`\n\nconst BioContainer = styled(DashedContainer)`\n  margin-right: 25px;\n  display: grid;\n  grid-row-gap: 15px;\n`\n\nconst ComputerContainer = styled(DashedContainer)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import React, { FC, HTMLAttributes, useState } from \"react\"\nimport { VideoURLs } from \"../constants/siteConstants\"\n\ntype Props = HTMLAttributes<HTMLVideoElement>\n\nexport const AutoplayVideos: FC<Props> = ({ className }) => {\n  const [currentVideoSrcIndex, setCurrentVideoSrcIndex] = useState(0)\n\n  const rotateVideo = (video: HTMLVideoElement | null) => {\n    if (video) {\n      video.addEventListener(\"ended\", () => {\n        const nextIndex = (currentVideoSrcIndex + 1) % VideoURLs.length\n        setCurrentVideoSrcIndex(nextIndex)\n      })\n    }\n  }\n\n  return (\n    <video\n      ref={rotateVideo}\n      autoPlay={true}\n      muted={true}\n      className={className}\n      src={VideoURLs[currentVideoSrcIndex]}\n    />\n  )\n}\n","import React, { FC, HTMLAttributes } from \"react\"\nimport { RecordPlayer as PlayerComponents } from \"../constants/siteConstants\"\nimport styled, { keyframes, css } from \"styled-components\"\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  isArmRotating: boolean\n}\n\nexport const RecordPlayer: FC<Props> = ({ className = \"\", isArmRotating }) => {\n  return (\n    <PlayerContainer className={className}>\n      <PlayerArm isArmRotating={isArmRotating}>\n        {PlayerComponents.arm}\n      </PlayerArm>\n      <Player>{PlayerComponents.playerWithoutArm}</Player>\n    </PlayerContainer>\n  )\n}\n\nconst PlayerContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`\n\nconst startingPosition = `\n    transform: rotate(0deg);\n    top: 9px;\n    right: 12px;\n`\n\nconst endingPosition = `\n    transform: rotate(90deg);\n    top: 2px;\n    right: -25px;\n`\n\nconst rotateArm = keyframes`\n    from {\n        ${startingPosition}\n    }\n\n    to {\n        ${endingPosition}\n    }\n`\n\nconst PlayerArm = styled.pre<{ isArmRotating: boolean }>`\n  position: absolute;\n  margin: 0;\n  transform-origin: top left;\n\n  ${({ isArmRotating }) => {\n    if (isArmRotating) {\n      return css`\n        animation: ${rotateArm} 2s linear;\n        ${endingPosition}\n      `\n    } else {\n      return `\n                ${startingPosition}\n            `\n    }\n  }}\n`\n\nconst Player = styled.pre`\n  margin: 0;\n`\n","import React, {\n  FC,\n  HTMLAttributes,\n  useState,\n  useEffect,\n  RefObject,\n} from \"react\"\nimport styled from \"styled-components\"\nimport { Index, AudioUrls } from \"../../constants/siteConstants\"\nimport { RecordPlayer } from \"../RecordPlayer\"\n\nexport const MobileIndex: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n}) => {\n  const [isPlayingMusic, setIsPlayingMusic] = useState(false)\n  const [currentSongIndex, setCurrentSongIndex] = useState(0)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsPlayingMusic(true)\n    }, 3000)\n  }, [])\n\n  const keepPlaying = (ref: HTMLAudioElement | null) => {\n    if (ref) {\n      ref.addEventListener(\"ended\", () => {\n        const nextIndex = (currentSongIndex + 1) % AudioUrls.length\n        setCurrentSongIndex(nextIndex)\n      })\n    }\n  }\n\n  const currentSong = AudioUrls[currentSongIndex]\n\n  return (\n    <HeaderContainer className={className ?? \"\"}>\n      <Header>{Index.mobileHeaderName}</Header>\n      <RecordPlayerContainer>\n        <StyledRecordPlayer isArmRotating={isPlayingMusic} />\n        {isPlayingMusic && (\n          <HiddenAudio src={currentSong} autoPlay={true} ref={keepPlaying} />\n        )}\n      </RecordPlayerContainer>\n    </HeaderContainer>\n  )\n}\n\nconst HeaderContainer = styled.div`\n  text-align: center;\n`\n\nconst Header = styled.pre`\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n  max-width: 100%;\n`\n\nconst StyledRecordPlayer = styled(RecordPlayer)`\n  margin-top: 20px;\n`\n\nconst RecordPlayerContainer = styled.div``\n\nconst HiddenAudio = styled.audio``\n","import { FC, ReactElement, useLayoutEffect, useState } from \"react\"\n\ninterface Props {\n  desktopView: ReactElement\n  mobileView: ReactElement\n  breakpoint: number\n}\n\nexport const ResponsiveBreakpoint: FC<Props> = ({\n  desktopView,\n  mobileView,\n  breakpoint,\n}) => {\n  const [currentView, setView] = useState<\"desktop\" | \"mobile\">(\"desktop\")\n  useLayoutEffect(() => {\n    setView(window.innerWidth >= breakpoint ? \"desktop\" : \"mobile\")\n  })\n\n  switch (currentView) {\n    case \"mobile\":\n      return mobileView\n    case \"desktop\":\n      return desktopView\n  }\n}\n","import React, { FC, useLayoutEffect } from \"react\"\n\nimport styled from \"styled-components\"\nimport { PageWrapper } from \"../components/page-wrapper\"\nimport { DesktopIndex } from \"../components/index/Desktop\"\nimport { MobileIndex } from \"../components/index/Mobile\"\nimport {\n  GALAKSIJA_ARTICLE,\n  MobileBreakpoint,\n  RESUME,\n} from \"../constants/siteConstants\"\nimport { Link } from \"gatsby\"\nimport { ResponsiveBreakpoint } from \"../components/ResponsiveBreakpoint\"\n\nconst IndexPage: FC = () => {\n  return (\n    <>\n      <PageWrapper>\n        <TerminalScreenFrame>\n          <ResponsiveBreakpoint\n            desktopView={<DesktopIndex />}\n            mobileView={<ResponsiveMobileIndex />}\n            breakpoint={parseInt(MobileBreakpoint)}\n          />\n        </TerminalScreenFrame>\n      </PageWrapper>\n      <Footer>\n        <div>\n          <a target='_blank' href={RESUME}>Read an awesome resume</a>\n        </div>\n        <div>\n          <a target='_blank' href={GALAKSIJA_ARTICLE}>Learn about programs on the radio</a>\n        </div>\n        <Link to=\"/credits\">Give credit where credit is due</Link>\n      </Footer>\n    </>\n  )\n}\n\nconst Footer = styled.footer`\n  display: grid;\n  justify-content: center;\n  margin: 10px 0;\n\n  @media (max-width: ${MobileBreakpoint}) {\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\nconst TerminalScreenFrame = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 15px;\n`\n\nconst ResponsiveMobileIndex = styled(MobileIndex)`\n  font-size: 8px;\n`\n\nexport default IndexPage\n"],"sourceRoot":""}