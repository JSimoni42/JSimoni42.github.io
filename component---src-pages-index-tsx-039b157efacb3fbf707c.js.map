{"version":3,"sources":["webpack:///./src/components/CursorRow.tsx","webpack:///./src/components/AsciiComputer.tsx","webpack:///./src/components/index/Desktop.tsx","webpack:///./src/components/AutoplayVideos.tsx","webpack:///./src/components/RecordPlayer.tsx","webpack:///./src/components/index/Mobile.tsx","webpack:///./src/pages/index.tsx"],"names":["CursorRow","text","startTyping","className","delay","useState","typedText","setTypedText","callback","useRef","useEffect","current","currentIndex","length","t","intervalId","setInterval","call","clearInterval","TextContainer","Cursor","styled","span","Blinking","keyframes","div","AsciiComputer","children","ComputerPart","Computer","top","left","ComputerScreen","right","bottom","pre","HeaderContainer","ComputerContent","currentVideoSrcIndex","setCurrentVideoSrcIndex","ref","video","addEventListener","nextIndex","VideoURLs","autoPlay","muted","src","Header","ContentContainer","IntroContainer","ComputerContainer","PlayerContainer","startingPosition","endingPosition","rotateArm","PlayerArm","isArmRotating","css","Player","StyledRecordPlayer","PlayerComponents","arm","playerWithoutArm","RecordPlayerContainer","HiddenAudio","audio","TerminalScreenFrame","ResponsiveDesktopIndex","Index","headerName","intro","MobileBreakpoint","ResponsiveMobileIndex","isPlayingMusic","setIsPlayingMusic","currentSongIndex","setCurrentSongIndex","setTimeout","currentSong","AudioUrls","mobileHeaderName","IndexPage"],"mappings":"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","file":"component---src-pages-index-tsx-039b157efacb3fbf707c.js","sourcesContent":["import React, { FC, HTMLAttributes, useState, useEffect, useRef } from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  text: string\n  startTyping: boolean\n  delay?: number\n}\n\nexport const CursorRow: FC<Props> = ({\n  text,\n  startTyping,\n  className = \"\",\n  delay = 100,\n}) => {\n  const [typedText, setTypedText] = useState(\"\")\n  const callback = useRef<() => void>()\n\n  useEffect(() => {\n    callback.current = (): void => {\n      if (text === typedText) {\n        return\n      } else {\n        const currentIndex = typedText.length\n        setTypedText(t => t + text[currentIndex])\n      }\n    }\n  }, [text, typedText])\n\n  useEffect(() => {\n    if (startTyping) {\n      const tick = () => {\n        callback.current?.()\n      }\n\n      const intervalId = setInterval(tick, delay)\n      return () => clearInterval(intervalId)\n    }\n  }, [startTyping])\n\n  return (\n    <div className={className}>\n      <TextContainer>{typedText}</TextContainer>\n      <Cursor />\n    </div>\n  )\n}\n\nconst TextContainer = styled.span`\n  &::selection {\n    background-color: white;\n    color: black;\n  }\n`\n\nconst Blinking = keyframes`\n  from {\n    background-color: white;\n  }\n\n  to {\n    background-color: black;\n  }\n`\n\nconst Cursor = styled.div`\n  display: inline-block;\n  background-color: white;\n  height: 23px;\n  width: 10px;\n  animation: ${Blinking} 1s linear infinite;\n  vertical-align: text-top;\n`\n","import React, { FC } from \"react\"\nimport styled from \"styled-components\"\nimport { Computer } from \"../constants/siteConstants\"\n\nexport const AsciiComputer: FC = ({ children }) => {\n  return (\n    <div>\n      <div>\n        <ComputerPart>{Computer.top}</ComputerPart>\n      </div>\n      <div>\n        <ComputerPart>{Computer.left}</ComputerPart>\n        <ComputerScreen>{children}</ComputerScreen>\n        <ComputerPart>{Computer.right}</ComputerPart>\n      </div>\n      <div>\n        <ComputerPart>{Computer.bottom}</ComputerPart>\n      </div>\n    </div>\n  )\n}\n\nconst ComputerScreen = styled.div`\n  display: inline-block;\n  width: 358px;\n  height: 195px;\n`\n\nconst ComputerPart = styled.pre`\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n`\n","import React, { FC, HTMLAttributes } from \"react\"\nimport styled from \"styled-components\"\nimport { Index } from \"../../constants/siteConstants\"\nimport { CursorRow } from \"../CursorRow\"\nimport { AsciiComputer } from \"../AsciiComputer\"\nimport { AutoplayVideos } from \"../AutoplayVideos\"\n\nexport const DesktopIndex: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n}) => {\n  return (\n    <div className={className ?? \"\"}>\n      <HeaderContainer>\n        <Header>{Index.headerName}</Header>\n      </HeaderContainer>\n      <ContentContainer>\n        <IntroContainer>\n          <CursorRow text={Index.intro} startTyping={true} />\n        </IntroContainer>\n        <ComputerContainer>\n          <AsciiComputer>\n            <ComputerContent />\n          </AsciiComputer>\n        </ComputerContainer>\n      </ContentContainer>\n    </div>\n  )\n}\n\nconst HeaderContainer = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n`\n\nconst ComputerContent = styled(AutoplayVideos)`\n  width: 100%;\n  height: 100%;\n`\n\nconst Header = styled.pre`\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n`\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  flex-grow: 0;\n`\n\nconst IntroContainer = styled.div`\n  border: 5px dashed white;\n  padding: 15px;\n  flex-grow: 1;\n  width: 45%;\n  margin-right: 25px;\n`\n\nconst ComputerContainer = styled(IntroContainer)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import React, { FC, HTMLAttributes, useState } from \"react\"\nimport { VideoURLs } from \"../constants/siteConstants\"\n\ntype Props = HTMLAttributes<HTMLVideoElement>\n\nexport const AutoplayVideos: FC<Props> = ({ className }) => {\n  const [currentVideoSrcIndex, setCurrentVideoSrcIndex] = useState(0)\n\n  const rotateVideo = (video: HTMLVideoElement | null) => {\n    if (video) {\n      video.addEventListener(\"ended\", () => {\n        const nextIndex = (currentVideoSrcIndex + 1) % VideoURLs.length\n        setCurrentVideoSrcIndex(nextIndex)\n      })\n    }\n  }\n\n  return (\n    <video\n      ref={rotateVideo}\n      autoPlay={true}\n      muted={true}\n      className={className}\n      src={VideoURLs[currentVideoSrcIndex]}\n    />\n  )\n}\n","import React, { FC, HTMLAttributes } from \"react\"\nimport { RecordPlayer as PlayerComponents } from \"../constants/siteConstants\"\nimport styled, { keyframes, css } from \"styled-components\"\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  isArmRotating: boolean\n}\n\nexport const RecordPlayer: FC<Props> = ({ className = \"\", isArmRotating }) => {\n  return (\n    <PlayerContainer className={className}>\n      <PlayerArm isArmRotating={isArmRotating}>\n        {PlayerComponents.arm}\n      </PlayerArm>\n      <Player>{PlayerComponents.playerWithoutArm}</Player>\n    </PlayerContainer>\n  )\n}\n\nconst PlayerContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`\n\nconst startingPosition = `\n    transform: rotate(0deg);\n    top: 9px;\n    right: 12px;\n`\n\nconst endingPosition = `\n    transform: rotate(90deg);\n    top: 2px;\n    right: -25px;\n`\n\nconst rotateArm = keyframes`\n    from {\n        ${startingPosition}\n    }\n\n    to {\n        ${endingPosition}\n    }\n`\n\nconst PlayerArm = styled.pre<{ isArmRotating: boolean }>`\n  position: absolute;\n  margin: 0;\n  transform-origin: top left;\n\n  ${({ isArmRotating }) => {\n    if (isArmRotating) {\n      return css`\n        animation: ${rotateArm} 2s linear;\n        ${endingPosition}\n      `\n    } else {\n      return `\n                ${startingPosition}\n            `\n    }\n  }}\n`\n\nconst Player = styled.pre`\n  margin: 0;\n`\n","import React, {\n  FC,\n  HTMLAttributes,\n  useState,\n  useEffect,\n  RefObject,\n} from \"react\"\nimport styled from \"styled-components\"\nimport { Index, AudioUrls } from \"../../constants/siteConstants\"\nimport { RecordPlayer } from \"../RecordPlayer\"\n\nexport const MobileIndex: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n}) => {\n  const [isPlayingMusic, setIsPlayingMusic] = useState(false)\n  const [currentSongIndex, setCurrentSongIndex] = useState(0)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsPlayingMusic(true)\n    }, 3000)\n  }, [])\n\n  const keepPlaying = (ref: HTMLAudioElement | null) => {\n    if (ref) {\n      ref.addEventListener(\"ended\", () => {\n        const nextIndex = (currentSongIndex + 1) % AudioUrls.length\n        setCurrentSongIndex(nextIndex)\n      })\n    }\n  }\n\n  const currentSong = AudioUrls[currentSongIndex]\n\n  return (\n    <HeaderContainer className={className ?? \"\"}>\n      <Header>{Index.mobileHeaderName}</Header>\n      <RecordPlayerContainer>\n        <StyledRecordPlayer isArmRotating={isPlayingMusic} />\n        {isPlayingMusic && (\n          <HiddenAudio src={currentSong} autoPlay={true} ref={keepPlaying} />\n        )}\n      </RecordPlayerContainer>\n    </HeaderContainer>\n  )\n}\n\nconst HeaderContainer = styled.div`\n  text-align: center;\n`\n\nconst Header = styled.pre`\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n  max-width: 100%;\n`\n\nconst StyledRecordPlayer = styled(RecordPlayer)`\n  margin-top: 20px;\n`\n\nconst RecordPlayerContainer = styled.div``\n\nconst HiddenAudio = styled.audio``\n","import React, { FC } from \"react\"\n\nimport styled from \"styled-components\"\nimport { PageWrapper } from \"../components/page-wrapper\"\nimport { DesktopIndex } from \"../components/index/Desktop\"\nimport { MobileIndex } from \"../components/index/Mobile\"\nimport { MobileBreakpoint } from \"../constants/siteConstants\"\n\nconst IndexPage: FC = () => {\n  return (\n    <PageWrapper>\n      <TerminalScreenFrame>\n        <ResponsiveDesktopIndex />\n        <ResponsiveMobileIndex />\n      </TerminalScreenFrame>\n    </PageWrapper>\n  )\n}\n\nconst TerminalScreenFrame = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ResponsiveDesktopIndex = styled(DesktopIndex)`\n  @media (max-width: ${MobileBreakpoint}) {\n    display: none;\n  }\n`\n\nconst ResponsiveMobileIndex = styled(MobileIndex)`\n  font-size: 8px;\n  display: none;\n\n  @media (max-width: ${MobileBreakpoint}) {\n    display: inline-block;\n  }\n`\n\nexport default IndexPage\n"],"sourceRoot":""}